<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="Scenario"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
    <target>
        <inSequence>
            <property name="accessToken" expression="json-eval($.accessToken)"/>
            <property name="apiUrl" expression="json-eval($.apiUrl)"/>
            <property name="apiVersion" expression="json-eval($.apiVersion)"/>
            <property name="spreadsheetTitle" expression="json-eval($.spreadsheetTitle)"/>
            <property name="title" expression="json-eval($.title)"/>
            <property name="rowCount" expression="json-eval($.rowCount)"/>
            <property name="colCount" expression="json-eval($.colCount)"/>
            <property name="name" expression="json-eval($.name)"/>
            <property name="age" expression="json-eval($.age)"/>
            <property name="address" expression="json-eval($.address)"/>
            <script language="js">var name = mc.getProperty('name');
                var age = mc.getProperty('age');
                var address = mc.getProperty('address');
                var fieldValues = "{";
                fieldValues += '"name":';
                if(name != null) {
                    fieldValues += '"' + name + '"';
                } else {
                    fieldValues += '""';
                }
                fieldValues += ',"age":';
                if(age != null) {
                    fieldValues += '"' + age + '"';
                } else {
                    fieldValues += '""';
                }
                fieldValues += ',"address":';
                if(address != null) {
                    fieldValues += '"' + address + '"';
                } else {
                    fieldValues += '""';
                }
                fieldValues += "}";
                mc.setProperty('fieldValues', fieldValues);
            </script>
            <property name="fieldValues" expression="get-property('fieldValues')"/>
            <googlespreadsheet.init>
                <accessToken>{$ctx:accessToken}</accessToken>
                <apiUrl>{$ctx:apiUrl}</apiUrl>
                <apiVersion>{$ctx:apiVersion}</apiVersion>
            </googlespreadsheet.init>
            <googlespreadsheet.getSpreadsheetByTilte>
                <spreadsheetTitle>{$ctx:spreadsheetTitle}</spreadsheetTitle>
            </googlespreadsheet.getSpreadsheetByTilte>
            <property name="getSpreadsheetByTilteFeed" expression="json-eval($.feed)"/>
            <script language="js">var feed = mc.getProperty('getSpreadsheetByTilteFeed');
                if(feed != null) {
                var feedObject = eval("("+feed+")");
                var totalResults = feedObject["totalResults"];
                entryObject = feedObject["entry"];
                if(entryObject != null) {
                    var isExists = false;
                    if(totalResults == 1) {
                        splitedId = entryObject["id"].split("/");
                        var spreadsheetKey = splitedId[splitedId.length-1];
                        mc.setProperty('spreadsheetKey', spreadsheetKey);
                    }
                    if(totalResults &gt; 1) {
                        for (i = 0; i &lt; entryObject.length; i++) {
                            if(entryObject[i]["title"]["$"] == mc.getProperty("spreadsheetTitle")) {
                                isExists = true;
                                splitedId = entryObject[i]["id"].split("/");
                                var spreadsheetKey = splitedId[splitedId.length-1];
                                mc.setProperty('spreadsheetKey', spreadsheetKey);
                                break;
                            }
                        }
                        if(!isExists) {
                            totalResults = 0;
                        }
                    }
                }
                mc.setProperty('getSpreadsheetByTilteTotalResults', totalResults);
                }
            </script>
            <filter source="get-property('getSpreadsheetByTilteTotalResults') = 0"
                    regex="true">
                <then>
                    <property name="message" value="Error: The spreadsheet is not exist"/>
                    <loopback/>
                </then>
            </filter>
            <filter xpath="(not(get-property('spreadsheetKey') = '' or (not(string(get-property('spreadsheetKey'))))))">
                <then>
                    <header name="Authorization"
                            scope="transport"
                            expression="fn:concat('Bearer ',get-property('uri.var.accessToken'))"/>
                    <googlespreadsheet.getWorksheetByTitle>
                        <key>{$ctx:spreadsheetKey}</key>
                        <worksheetTitle>{$ctx:title}</worksheetTitle>
                    </googlespreadsheet.getWorksheetByTitle>
                    <property name="getWorksheetByTitleFeed" expression="json-eval($.feed)"/>
                    <script language="js">var feed = mc.getProperty('getWorksheetByTitleFeed');
                        if(feed != null) {
                        var feedObject = eval("("+feed+")");
                        var totalResults = feedObject["totalResults"];
                        entryObject = feedObject["entry"];
                        if(feedObject["entry"] != null) {
                            var isExists = false;
                            if(totalResults &gt; 1) {
                                for (i = 0; i &lt; entryObject.length; i++) {
                                    if(entryObject[i]["title"]["$"] == mc.getProperty("title")) {
                                        isExists = true;
                                        break;
                                    }
                                }
                                if(!isExists) {
                                    totalResults = 0;
                                }
                            }
                        }
                        mc.setProperty('getWorksheetByTitleTotalResults', totalResults);
                        }
                    </script>
                    <filter source="get-property('getWorksheetByTitleTotalResults') = 0"
                            regex="true">
                        <then>
                            <header name="Authorization"
                                    scope="transport"
                                    expression="fn:concat('Bearer ',get-property('uri.var.accessToken'))"/>
                            <googlespreadsheet.addWorksheet>
                                <key>{$ctx:spreadsheetKey}</key>
                                <title>{$ctx:title}</title>
                                <rowCount>{$ctx:rowCount}</rowCount>
                                <colCount>{$ctx:colCount}</colCount>
                            </googlespreadsheet.addWorksheet>
                            <property name="addWorksheetStatusCode" expression="$axis2:HTTP_SC"/>
                            <filter source="get-property('addWorksheetStatusCode') != 201" regex="true">
                                <then>
                                    <property name="message" expression="//errors"/>
                                    <property name="message"
                                              expression="fn:concat('Error: Unable to create the worksheet (', get-property('message'),')')"/>
                                    <loopback/>
                                </then>
                                <else>
                                    <property name="message"
                                              value="New spreadsheet is added. To insert data into a row, Please add a row with column names"/>
                                    <loopback/>
                                </else>
                            </filter>
                        </then>
                        <else>
                            <header name="Authorization"
                                    scope="transport"
                                    expression="fn:concat('Bearer ',get-property('uri.var.accessToken'))"/>
                            <googlespreadsheet.listWorksheets>
                                <key>{$ctx:spreadsheetKey}</key>
                            </googlespreadsheet.listWorksheets>
                            <property name="getWorksheetByTitleFeed" expression="json-eval($.feed)"/>
                            <script language="js">var feed = mc.getProperty('getWorksheetByTitleFeed');
                                if(feed != null) {
                                    var feedObject = eval("("+feed+")");
                                    var totalResults = feedObject["totalResults"];
                                    entryObject = feedObject["entry"];
                                    if(feedObject["entry"] != null) {
                                        if(totalResults == 1) {
                                            mc.setProperty('worksheetId', '1');
                                        }
                                        if(totalResults &gt; 1) {
                                            var i = 0;
                                            for (i = 0; i &lt; entryObject.length; i++) {
                                                if(entryObject[i]["title"]["$"] == mc.getProperty("title")) {
                                                    var wId = ("" + (i + 1)).replace(".0", "");
                                                    mc.setProperty('worksheetId', wId);
                                                    break;
                                                }
                                            }
                                        }
                                    }
                                }
                            </script>
                            <filter xpath="(not(get-property('worksheetId') = '' or (not(string(get-property('worksheetId'))))))">
                                <then>
                                    <header name="Authorization"
                                            scope="transport"
                                            expression="fn:concat('Bearer ',get-property('uri.var.accessToken'))"/>
                                    <googlespreadsheet.insertRows>
                                        <key>{$ctx:spreadsheetKey}</key>
                                        <worksheetId>{$ctx:worksheetId}</worksheetId>
                                        <fieldValues>{$ctx:fieldValues}</fieldValues>
                                    </googlespreadsheet.insertRows>
                                    <property name="insertRowsStatusCode" expression="$axis2:HTTP_SC"/>
                                    <filter source="get-property('insertRowsStatusCode') != 201" regex="true">
                                        <then>
                                            <property name="message" expression="//errors"/>
                                            <property name="message"
                                                      expression="fn:concat('Error: Unable to insert the row (', get-property('message'),')')"/>
                                            <loopback/>
                                        </then>
                                        <else>
                                            <log level="full"/>
                                            <property name="message" value="Success: Successfully added the row"/>
                                            <loopback/>
                                        </else>
                                    </filter>
                                </then>
                            </filter>
                        </else>
                    </filter>
                </then>
                <else>
                    <property name="message" value="Error: The key is null"/>
                    <loopback/>
                </else>
            </filter>
        </inSequence>
        <outSequence>
            <property name="messageType" value="application/json" scope="axis2"/>
            <payloadFactory media-type="json">
                <format>
                    {
                        "Response":{
                            "process":"enterDataToSpreadsheet",
                            "activityResponse":"$1"
                        }
                    }
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('message')"/>
                </args>
            </payloadFactory>
            <send/>
        </outSequence>
    </target>
    <description/>
</proxy>
